{"ast":null,"code":"var _jsxFileName = \"/Users/thomasd/norm-scoring/client/src/components/app.js\";\nimport React from 'react';\nimport Login from './login';\nimport CardState from './cardstate';\nimport Card from './cardchoice';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      login: false,\n      cardState: [],\n      instance: 'tes',\n      hidden: true\n    };\n    this.instance = axios.create({\n      baseURL: 'http://localhost:5000'\n    });\n    this.cards = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"20\", \"40\", \"100\", \"?\"];\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.getCardState.bind(this), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getCurrentUsers(userdata) {\n    let today = new Date();\n    let time = today.getTime();\n\n    let users = _.filter(Object.values(userdata), user => {\n      return time - 12000 <= user.last_seen;\n    });\n\n    return users;\n  }\n\n  getCardState() {\n    if (this.state.login) {\n      this.instance.post(`/session/${this.state.instance}`, {\n        user: this.state.userName\n      }).then(res => {\n        this.setState({\n          cardState: this.getCurrentUsers(res.data[this.state.instance].users),\n          hidden: res.data[this.state.instance].hidden\n        });\n      });\n    }\n  }\n\n  handleLoginChange(event) {\n    this.setState({\n      userName: event.target.value\n    });\n  }\n\n  handleRoomChange(event) {\n    this.setState({\n      instance: event.target.value\n    });\n  }\n\n  handleLoginSubmit(event) {\n    event.preventDefault();\n    this.instance.post(`/session/${this.state.instance}/logon`, {\n      \"user\": this.state.userName\n    }).then(res => {\n      this.setState({\n        cardState: this.getCurrentUsers(res.data[this.state.instance].users),\n        hidden: res.data[this.state.instance].hidden,\n        login: true\n      });\n    });\n  }\n\n  handleLogoutSubmit(event) {\n    event.preventDefault();\n    this.instance.post(`/session/${this.state.instance}/logout`, {\n      \"user\": this.state.userName\n    }).then(res => {\n      this.setState({\n        login: false\n      });\n    });\n  }\n\n  handleChoiceSubmit(event) {\n    this.instance.post(`/session/${this.state.instance}/score`, {\n      \"user\": this.state.userName,\n      \"score\": event.target.textContent\n    }).then(res => {\n      this.setState({\n        cardState: this.getCurrentUsers(res.data[this.state.instance].users),\n        hidden: res.data[this.state.instance].hidden\n      });\n    });\n  }\n\n  handleShowCards(event) {\n    this.instance.post(`/session/${this.state.instance}/show`, {\n      \"user\": this.state.userName,\n      \"score\": event.target.textContent\n    }).then(res => {\n      this.setState({\n        cardState: this.getCurrentUsers(res.data[this.state.instance].users),\n        hidden: res.data[this.state.instance].hidden\n      });\n    });\n  }\n\n  handleReset(event) {\n    this.instance.post(`/session/${this.state.instance}/reset`, {\n      \"user\": this.state.userName,\n      \"score\": event.target.textContent\n    }).then(res => {\n      this.setState({\n        cardState: this.getCurrentUsers(res.data[this.state.instance].users),\n        hidden: res.data[this.state.instance].hidden\n      });\n    });\n  }\n\n  render() {\n    let usercards = _.map(this.state.cardState, user => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CardState, {\n          username: user.username,\n          hidden: this.state.hidden,\n          youruser: this.state.userName,\n          value: user.score\n        }, user.username, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 68\n      }, this);\n    });\n\n    let cards = _.map(this.cards, card => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        value: card,\n        handler: this.handleChoiceSubmit.bind(this)\n      }, card, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 54\n      }, this);\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        children: [!this.state.login ? /*#__PURE__*/_jsxDEV(Login, {\n          userName: this.state.userName,\n          handleChange: this.handleLoginChange.bind(this),\n          handleRoomChange: this.handleRoomChange.bind(this),\n          room: this.state.instance,\n          login: this.handleLoginSubmit.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"ui menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"item\",\n            onClick: this.handleShowCards.bind(this),\n            children: \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"item\",\n            onClick: this.handleReset.bind(this),\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"right menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              class: \"ui item active\",\n              children: [\"User: \", this.state.userName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              class: \"ui item active\",\n              children: [\"Room: \", this.state.instance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              class: \"ui item active\",\n              onClick: this.handleLogoutSubmit.bind(this),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bodygrid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardsgrid\",\n              children: this.state.login ? cards : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"votesgrid\",\n            children: this.state.login ? usercards : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/thomasd/norm-scoring/client/src/components/app.js"],"names":["React","Login","CardState","Card","axios","_","App","Component","constructor","props","state","userName","login","cardState","instance","hidden","create","baseURL","cards","componentDidMount","interval","setInterval","getCardState","bind","componentWillUnmount","clearInterval","getCurrentUsers","userdata","today","Date","time","getTime","users","filter","Object","values","user","last_seen","post","then","res","setState","data","handleLoginChange","event","target","value","handleRoomChange","handleLoginSubmit","preventDefault","handleLogoutSubmit","handleChoiceSubmit","textContent","handleShowCards","handleReset","render","usercards","map","username","score","card"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Login from './login';\nimport CardState from './cardstate';\nimport Card from './cardchoice';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nclass App extends React.Component {\n  state = { userName: '', login: false, cardState: [], instance: 'tes', hidden: true};\n  constructor(props) {\n    super(props);\n    this.instance = axios.create({baseURL: 'http://localhost:5000'});\n    this.cards = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"13\", \"20\", \"40\", \"100\", \"?\"]\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.getCardState.bind(this), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  getCurrentUsers(userdata) {\n    let today = new Date();\n    let time = today.getTime();\n    let users = _.filter(Object.values(userdata), (user) => {return time-12000 <= user.last_seen});\n    return users\n  }\n\n  getCardState() {\n    if (this.state.login) {\n      this.instance.post(`/session/${this.state.instance}`, {user: this.state.userName}).then( res => {\n        this.setState({cardState: this.getCurrentUsers(res.data[this.state.instance ].users), hidden: res.data[ this.state.instance ].hidden});\n      })\n    }\n  }\n\n  handleLoginChange(event) {\n    this.setState({userName: event.target.value})\n  };\n\n  handleRoomChange(event) {\n    this.setState({instance: event.target.value})\n  };\n\n  handleLoginSubmit(event) {\n    event.preventDefault()\n    this.instance.post(`/session/${this.state.instance}/logon`, {\"user\": this.state.userName}).then( res => {\n      this.setState({\n        cardState: this.getCurrentUsers(res.data[this.state.instance ].users),\n        hidden: res.data[ this.state.instance ].hidden,\n        login: true});\n    })\n  };\n\n  handleLogoutSubmit(event) {\n    event.preventDefault()\n    this.instance.post(`/session/${this.state.instance}/logout`, {\"user\": this.state.userName}).then( res => {\n      this.setState({\n        login: false});\n    })\n  };\n\n  handleChoiceSubmit(event) {\n    this.instance.post(`/session/${this.state.instance}/score`, {\"user\": this.state.userName, \"score\": event.target.textContent})\n      .then( res => {\n        this.setState({cardState: this.getCurrentUsers(res.data[this.state.instance ].users), hidden: res.data[ this.state.instance ].hidden});\n    })\n  }\n\n  handleShowCards(event) {\n    this.instance.post(`/session/${this.state.instance}/show`, {\"user\": this.state.userName, \"score\": event.target.textContent})\n      .then( res => {\n        this.setState({cardState: this.getCurrentUsers(res.data[this.state.instance ].users), hidden: res.data[ this.state.instance ].hidden});\n    })\n  }\n\n  handleReset(event) {\n    this.instance.post(`/session/${this.state.instance}/reset`, {\"user\": this.state.userName, \"score\": event.target.textContent})\n      .then( res => {\n        this.setState({cardState: this.getCurrentUsers(res.data[this.state.instance ].users), hidden: res.data[ this.state.instance ].hidden});\n    })\n  }\n\n  render() {\n    let usercards = _.map(this.state.cardState, (user) => { return <div><CardState key={user.username}\n                                                                                  username={user.username}\n                                                                                  hidden={this.state.hidden}\n                                                                                  youruser={this.state.userName}\n                                                                                  value={user.score}/></div> })\n    let cards = _.map(this.cards, (card) => { return <Card key={card} value={card} handler={this.handleChoiceSubmit.bind(this)} /> } )\n    return (\n      <div className=\"ui segment\">\n        <div className=\"ui container\">\n          {!this.state.login ?\n            <Login userName={this.state.userName}\n                   handleChange={this.handleLoginChange.bind(this)}\n                   handleRoomChange={this.handleRoomChange.bind(this)}\n                   room={this.state.instance}\n                   login={this.handleLoginSubmit.bind(this)}/>\n            :\n            <div class=\"ui menu\">\n              <a class=\"item\"onClick={this.handleShowCards.bind(this)}>\n                Show\n              </a>\n              <a class=\"item\"onClick={this.handleReset.bind(this)}>\n                Reset\n              </a>\n              <div class=\"right menu\" >\n                <a class=\"ui item active\">\n                  User: {this.state.userName}\n                </a>\n                <a class=\"ui item active\">\n                  Room: {this.state.instance}\n                </a>\n                <a class=\"ui item active\" onClick={this.handleLogoutSubmit.bind(this)}>\n                  Logout\n                </a>\n              </div>\n            </div>}\n        <div className=\"bodygrid\">\n          <div>\n            <div className='cardsgrid'>\n              {\n                this.state.login ?\n                  cards\n                  :\n                  null\n              }\n            </div>\n          </div>\n          <div className='votesgrid'>\n          {\n            this.state.login ?\n              usercards\n              :\n              null\n          }\n          </div>\n        </div>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}